<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nowcoder.community.dao.MessageMapper">
    <sql id="selectFields">
        id,from_id,to_id,conversation_id,content,status,create_time
    </sql>
    <sql id="insertFields">
        from_id,to_id,conversation_id,content,status,create_time
    </sql>

    <insert id="insertMessage">
     insert into message(<include refid="insertFields"></include>)
     values(#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

    <update id="updateStatus">
    update message
    set status=#{status}
    where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 这里是寻找消息列表（有什么人找你，或者你找过谁），
    先通过内嵌的select把用户发送或者接受的按conversation_id进行分类
     然后再根据分组寻找其中id最大的（最新消息）
     把id对应的message输出，就是所有对话框了
     -->
    <select id="selectConverstions" resultType="com.nowcoder.community.entity.Message">
        select <include refid="selectFields"></include>
         from message
        where id in (
             select max(id) from community.message
            where status!=2
            and from_id!=1
            and (from_id =#{userId}  or to_id =#{userId})
            group by conversation_id
        )
        order by id desc
        limit #{offset}, #{limit}
    </select>
    <!-- 子查询返回的结果集包含一个名为 maxid 的列，表示每个会话中最新的一条消息的 id。
    为了在后续的 SQL 语句中引用这个列，我们需要给整个结果集起一个别名，这里使用了 AS m 来命名结果集为 m。
    from 后面是一个表名
     -->
    <select id="selectConversationCount" resultType="java.lang.Integer">
        select count(m.maxid) from(
            select max(id) as maxid from community.message
            where status!=2
            and from_id!=1
            and (from_id =#{userId}  or to_id =#{userId})
            group by conversation_id
        ) as m
    </select>

    <select id="selectLetters" resultType="com.nowcoder.community.entity.Message">
        select <include refid="selectFields"></include>
        from message
        where status!=2
        and from_id!=1
        and conversation_id=#{conversationId}
        order by id desc
        limit #{offset},#{limit}
    </select>

    <select id="selectLetterCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status!=2
        and from_id!=1
        and conversation_id=#{conversationId}
    </select>

    <select id="selectLetterUnreadCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status = 0
        and from_id !=1
        and to_id=#{userId}
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>

    <select id="selectLatestNotice" resultType="com.nowcoder.community.entity.Message">
        select <include refid="selectFields"></include>
        from message
        where id in(
        <!--这里把最新id查出来了然后把该id的message传出来了-->
        select max(id) from message
        where status!=2
        and from_id=1
        and to_id =#{userId}
        and conversation_id=#{topic}
        )
    </select>

    <select id="selectNoticeCount" resultType="java.lang.Integer">
        select count(id) from message
        where status!=2
        and from_id=1
        and to_id =#{userId}
        and conversation_id=#{topic}
    </select>

    <select id="selectNoticeUnreadCount" resultType="java.lang.Integer">
        select count(id) from message
        where status=0
        and from_id=1
        and to_id =#{userId}
        <if test="topic!=null">
        and conversation_id=#{topic}
        </if>
    </select>

    <select id="selectNotices" resultType="com.nowcoder.community.entity.Message">
        select <include refid="selectFields"></include>
        from message
        where status!=2
        and from_id=1
        and to_id =#{userId}
        and   conversation_id=#{topic}
        order by create_time desc
        limit #{offset},#{limit}
    </select>

</mapper>